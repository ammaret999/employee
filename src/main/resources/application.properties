spring.datasource.url=jdbc:postgresql://localhost:5555/postgres
#host.docker.internal:2345
#localhost:5555
spring.datasource.username=${POSTGRES_ID}
spring.datasource.password=${POSTGRES_PASSWORD}
#5555
#2345
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.sql.init.mode=always
spring.jpa.hibernate.ddl-auto=none
spring.jpa.defer-datasource-initialization=true

# Minio Host http://localhost:9090/browser/image
# Minio Bucket name for your application
minio.bucket=${MINIO_BUCKET}
# Minio access key (login)
minio.accessKey=${MINIO_KEY}
# Minio secret key (password)
minio.secretKey=${MINIO_KEY}
# Minio end point
minio.endpoint=http://localhost:9000/

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=5MB
# Max Request Size
spring.servlet.multipart.max-request-size=10MB

#spring.security.oauth2.client.registration.google.client-id=706911901274-4riu2c8i4010kv7jdnvuld8qoapds7h1.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.google.client-scope=openid,email,profile

spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com
spring.security.oauth2.resourceserver.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

allowed.origin=http://localhost:3000
